// Place all the styles related to the Users controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/
/* Grid
-------------------------------------- */
/* Define the default grid (it's all in one column) */
form {
  display: grid;
  grid-row-gap: 5px;
}

/* Switch to two columns in wider viewports */
@media (min-width: 29.375rem) {
  form {
    grid-column-gap: 25px;
    grid-template-areas: 
      "label-name  label-email"
      "field-name  field-email"
      "label-msg   ."
      "field-msg   field-msg"
      "button      .";
  }
}

/* The values below correspond to the values shown in grid-template-areas above, placing the items on the grid accordingly. Note that the grid-area value does NOT have to match the class name. For example, .field-message has field-msg as its grid-area. */
@media (min-width: 29.375rem) {
label[for="username"]
 {
    grid-area: label-name;
  }
  label[for="email"]
{
    grid-area: label-email;
  }
  label[for="password"]
 {
    grid-area: label-msg;
  }
  #username {
    grid-area: field-name;
  }
  #email {
    grid-area: field-email;
  }
  #password {
    grid-area: field-msg;
  }
  button {
    grid-area: button;
  }
}

/* Generic styles for demo purposes
-------------------------------------- */
form {
  background-color: #eee;
  font-family: Helvetica, Arial, sans-serif;
  max-width: 600px;
  padding: 25px;
}

.field {
  border: 1px solid #ccc;
  font-family: inherit;
  font-size: 1rem;
  padding: 10px;
}

@media (max-width: 29.3125rem) {
  .label-email {
    margin-top: 20px;
  }
}

.label-message {
  margin-top: 20px;
}

.button {
  appearance: none;
  background-color: orange;
  border: none;
  font-size: .9375rem;
  margin-top: 20px;
  padding: 10px;
  /* without this, the button would be as 
  wide as its column (and the Name field) */
  justify-self: start;
}
